    Слайд 1. Титульный

Добрый день, уважаемая комиссия.

Тема моей работы: Метод сжатия статических изображений без потерь на основе алгоритма Хаффмана.


    Слайд 2. Цель и задачи

Метод Хаффмана активно применяется в алгоритмах сжатия без потерь, где важно сохранить исходное качество изображений.

Данный метод кодирует данные по частоте встречаемости символов, но не учитывает повторяющиеся последовательности одинаковых пикселей как единое целое.

Для устранения данного недостатка было принято решение разработать гибридный метод, который можно будет использовать как часть более сложного алгоритма сжатия.

Целью моей работы является разработка метода сжатия статических изображений без потерь на основе алгоритма Хаффмана.

Для достижения поставленной цели требуется решить задачи, представленные на слайде.


    Слайд 3. Сравнение методов сжатия без потерь

На данном слайде представлено сравнение методов сжатия без потерь на основе выделенных критериев.

Словарный метод LZW не требует предварительного построения таблицы частот и обеспечивает кодирование изображения в один проход.
Он использует словарь для замены повторяющихся последовательностей данных более короткими символами.
Такой подход позволяет решить описанный выше недостаток метода Хаффмана. 

Поэтому для первичного сжатия изображения был выбран словарный метод LZW.


    Слайд 4. Выбор цветовой модели

Перед сжатием изображения необходимо опредить формат, в котором будет представлена информация о каждом пикселе.

В качестве такой цветовой модели был выбран RGB, так как он требует всего 3 байта на пиксель и является стандартом для экранного отображения. 


    Слайд 5. Метод сжатия изображений на основе алгоритма Хаффмана (часть 1)

Реализацию гибридного метода сжатия можно разбить на три этапа:
-- получение данных сжимаемого изображения в виде байтовой строки;
-- этап сжатия изображения;
-- этап создания файла с сжатым изображением и информацией для его распаковки.


    Слайд 6. Метод сжатия изображений на основе алгоритма Хаффмана (часть 2)

Само сжатие гибридным методом состоит из следующих четырех этапов:
-- выполнения первичного сжатия изображения методом LZW;
-- нахождения таблицы частот полученных кодов;
-- построение дерева Хаффмана;
-- повторное сжатие изображения методом Хаффмана.

Использование первичной обработки изображения методом LZW позволило подготовить данные для Хаффмана, удалить избыточность и уменьшить количество обрабатваемых символов.


    Слайд 7. Первичное сжатие с использованием LZW

На первом этапе сжатия применяется метод LZW, который создаёт словарь и генерирует коды для последовательностей пикселей. В процессе формируется сжатая байтовая строка, возвращаются список уникальных пикселей и размер кодов.

В отличии от стандартной реализации метода LZW, в разработанном мной гибридном методе построенный словарь не сохраняется в сжатом изображении. Вместо этого при распаковке изображения он восстанавливается по сохраненным списку уникальных пикселей и величине кода одного пикселя.

Такой подход приводит к уменьшению размера сжатого файле.


    Слайд 8. Построение дерева Хаффмана

После построения таблицы частот символов, полученных в результате работы метода LZW, строится дерево Хаффмана.
Создаются узлы для символов с весами, равными их частотам, затем узлы объединяются в дерево с минимальными весами, где каждому ребру присваивается значение 0 или 1.

В отличие от стандартной реализации дерева Хаффмана, в разработанном мной гибридном методе за один символ принимается не один байт или пиксель, а код последовательности пикселей, сгенерированный на первом этапе метода.


    Слайд 9. Выполнение повторного сжатия изображения методом Хаффмана

На последнем этапе происходит сжатие подготовленных данных методом Хаффмана.
Алгоритм преобразует входную байтовую строку в битовую последовательность, используя коды Хаффмана из построенного дерева. Размер полученной битовой строки выравнивается до длины, кратной 8.


    Слайд 10. Используемые программные средства для реализации метода

В качестве языка программирования использовался Python.
Для создания графического интерфейса была выбрана библиотека tkinter.
Для визуализации сравнения работы методов сжатия изображений
использовалась библиотека matplotlib.


    Слайд 11. UML-диаграмма компонентов разработанного ПО

Структура разработанного программного обеспечения представлена в виде UML-диаграммы компонентов.


    Слайд 12. Результаты сжатия изображения

На данном слайде представлены результаты разработанного мной гибридного метода сжатия, а также график сравнения размеров сжатого изображения с исходным. В качестве примера использовалось черно-белое изображеие формата BMP, в котором присутствует достаточное количество цепочек повторяющихся пикселей. В данном случае удалось достигнуть 75-процентной степени сжатия изображения. Также стоит отметить, что 40% от сжатого файла составляют данные, необходимые для распаковки изображения.


    Слайд 13. Сравнение методов сжатия изображений (по степени сжатия)

Сравнение разработанного метода с аналогами проводилось по степени сжатия изображений.

На примерах видно, что степень сжатия зависит от типа данных: LZW лучше работает с длинными последовательностями одинаковых пикселей, Хаффман -- с неравномерным распределением цветов, а разработанный гибридный метод универсален.
Он позволяет минимизировать зависимость от особенностей входных изображений и получить более стабильный результат сжатия.

Используемые для сравнения стандартные методы сжатия Хаффмана и LZW также были реализованы мной.


    Слайд 14. Сравнение методов сжатия изображений (по размеру данных для распаковки)

При сравнении методов сжатия по размеру данных для распаковки видно, что разработанный гибридный метод требует больше информации для восстановления изображений. Это связано с необходимостью сохранения данных, используемых на обоих этапах сжатия. Также на большее процентное соотношение методанных в файле влияет меньшее количество информации об изображении за счет большего сжатия.

Несмотря на больший объем информации для распаковки, гибридный метод сохранил более стабильный результат сжатия изображений.


    Слайд 15. Заключение

В ходе выполнения работы были выполнены все поставленные задачи, а цель достигнута.


    Слайд 16. Направление дальнейшего развития

В ходе дальнейшего развития гибридного метода предлагаются варианты, представленные на слайде.


    Слайд 17. Научная публикация

По данной работе была написана и принята в печать публикация, представленная на слайде. Данный журнал рецензируется ВАК.
